mixin statusText(build)
	if build.status === 'in-progress'
		span in progress

	if build.status === 'queued'
		span queued

	if build.status === 'done'
		span done

	if build.status === 'error'
		span error

- var build = this.props.build;

.build(class="build__#{build.status}")
	.build_content
		div.build_header
			if build.number
				if build.status !== 'queued'
					Link(to="build", params={id: build.id})
						span Build #
						span= build.number
				else
						span Build #
						span= build.number

			if build.waitReason
				span  (
				span= build.waitReason
				span , waiting)

			if build.status === 'in-progress' && build.currentStep
				span  (
				span= build.currentStep
				span )

		div
			if build.project
				span.build_info
					Scm(scm=build.project.scm.type)
					| 
					Link(to="project", params={name: build.project.name})
						span= build.project.name
			if build.endDate
				span.build_info
					i.fa.fa-fw.fa-clock-o
					| 
					Duration(duration=(build.endDate - build.startDate))
			| 
			if build.scm
				span.build_info
					i.fa.fa-fw.fa-comment-o
					| 
					span= build.scm.rev.comment
			| 
			if !build.endDate
				if build.startDate
					span.build_info
						i.fa.fa-fw.fa-clock-o
						| started at 
						DateTime(date=new Date(build.startDate))
				else
					span.build_info
						i.fa.fa-fw.fa-clock-o
						| queued at 
						DateTime(date=new Date(build.createDate))


	.build_controls
		if build.completed
			a.btn.btn-sm.btn-default(href="javascript:void(0);", onClick=this.onRebuildProject(build.project.name))
				i.fa.fa-fw.fa-repeat(title="Rebuild")
				| 
				| Build again
		else
			//-.progress
				//-.progress-bar.progress-bar-success(style={width: '60%'})

